// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testCore.Data;

namespace testCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("testCore.Models.Brand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("testCore.Models.Component", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LapTopID")
                        .HasColumnType("int");

                    b.Property<double>("SizeDisk")
                        .HasColumnType("float");

                    b.Property<double>("SizePin")
                        .HasColumnType("float");

                    b.Property<double>("SizeRam")
                        .HasColumnType("float");

                    b.Property<double>("SizeScreen")
                        .HasColumnType("float");

                    b.Property<string>("TypeCPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("LapTopID")
                        .IsUnique();

                    b.ToTable("Components");
                });

            modelBuilder.Entity("testCore.Models.Laptop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaptopName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.ToTable("Laptop");
                });

            modelBuilder.Entity("testCore.Models.Component", b =>
                {
                    b.HasOne("testCore.Models.Laptop", "Laptop")
                        .WithOne("Component")
                        .HasForeignKey("testCore.Models.Component", "LapTopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("testCore.Models.Laptop", b =>
                {
                    b.HasOne("testCore.Models.Brand", "Brand")
                        .WithMany("Laptop")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("testCore.Models.Brand", b =>
                {
                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("testCore.Models.Laptop", b =>
                {
                    b.Navigation("Component");
                });
#pragma warning restore 612, 618
        }
    }
}
